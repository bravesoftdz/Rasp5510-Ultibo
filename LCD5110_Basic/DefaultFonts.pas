unit DefaultFonts;

interface

var
  SmallFont: array [0..573] of byte = (
    $06, $08, $20, $5f,
    $00, $00, $00, $00, $00, $00,   // sp
    $00, $00, $00, $2f, $00, $00,   // !
    $00, $00, $07, $00, $07, $00,   // "
    $00, $14, $7f, $14, $7f, $14,   // #
    $00, $24, $2a, $7f, $2a, $12,   // $
    $00, $23, $13, $08, $64, $62,   // %
    $00, $36, $49, $55, $22, $50,   // &
    $00, $00, $05, $03, $00, $00,   // '
    $00, $00, $1c, $22, $41, $00,   // (
    $00, $00, $41, $22, $1c, $00,   // )
    $00, $14, $08, $3E, $08, $14,   // *
    $00, $08, $08, $3E, $08, $08,   // +
    $00, $00, $00, $A0, $60, $00,   // ,
    $00, $08, $08, $08, $08, $08,   // -
    $00, $00, $60, $60, $00, $00,   // .
    $00, $20, $10, $08, $04, $02,   // /

    $00, $3E, $51, $49, $45, $3E,   // 0
    $00, $00, $42, $7F, $40, $00,   // 1
    $00, $42, $61, $51, $49, $46,   // 2
    $00, $21, $41, $45, $4B, $31,   // 3
    $00, $18, $14, $12, $7F, $10,   // 4
    $00, $27, $45, $45, $45, $39,   // 5
    $00, $3C, $4A, $49, $49, $30,   // 6
    $00, $01, $71, $09, $05, $03,   // 7
    $00, $36, $49, $49, $49, $36,   // 8
    $00, $06, $49, $49, $29, $1E,   // 9
    $00, $00, $36, $36, $00, $00,   // :
    $00, $00, $56, $36, $00, $00,   // ;
    $00, $08, $14, $22, $41, $00,   // <
    $00, $14, $14, $14, $14, $14,   // =
    $00, $00, $41, $22, $14, $08,   // >
    $00, $02, $01, $51, $09, $06,   // ?

    $00, $32, $49, $59, $51, $3E,   // @
    $00, $7C, $12, $11, $12, $7C,   // A
    $00, $7F, $49, $49, $49, $36,   // B
    $00, $3E, $41, $41, $41, $22,   // C
    $00, $7F, $41, $41, $22, $1C,   // D
    $00, $7F, $49, $49, $49, $41,   // E
    $00, $7F, $09, $09, $09, $01,   // F
    $00, $3E, $41, $49, $49, $7A,   // G
    $00, $7F, $08, $08, $08, $7F,   // H
    $00, $00, $41, $7F, $41, $00,   // I
    $00, $20, $40, $41, $3F, $01,   // J
    $00, $7F, $08, $14, $22, $41,   // K
    $00, $7F, $40, $40, $40, $40,   // L
    $00, $7F, $02, $0C, $02, $7F,   // M
    $00, $7F, $04, $08, $10, $7F,   // N
    $00, $3E, $41, $41, $41, $3E,   // O

    $00, $7F, $09, $09, $09, $06,   // P
    $00, $3E, $41, $51, $21, $5E,   // Q
    $00, $7F, $09, $19, $29, $46,   // R
    $00, $46, $49, $49, $49, $31,   // S
    $00, $01, $01, $7F, $01, $01,   // T
    $00, $3F, $40, $40, $40, $3F,   // U
    $00, $1F, $20, $40, $20, $1F,   // V
    $00, $3F, $40, $38, $40, $3F,   // W
    $00, $63, $14, $08, $14, $63,   // X
    $00, $07, $08, $70, $08, $07,   // Y
    $00, $61, $51, $49, $45, $43,   // Z
    $00, $00, $7F, $41, $41, $00,   // [
    $AA, $55, $AA, $55, $AA, $55,   // Backslash (Checker pattern)
    $00, $00, $41, $41, $7F, $00,   // ]
    $00, $04, $02, $01, $02, $04,   // ^
    $00, $40, $40, $40, $40, $40,   // _

    $00, $00, $03, $05, $00, $00,   // `
    $00, $20, $54, $54, $54, $78,   // a
    $00, $7F, $48, $44, $44, $38,   // b
    $00, $38, $44, $44, $44, $20,   // c
    $00, $38, $44, $44, $48, $7F,   // d
    $00, $38, $54, $54, $54, $18,   // e
    $00, $08, $7E, $09, $01, $02,   // f
    $00, $18, $A4, $A4, $A4, $7C,   // g
    $00, $7F, $08, $04, $04, $78,   // h
    $00, $00, $44, $7D, $40, $00,   // i
    $00, $40, $80, $84, $7D, $00,   // j
    $00, $7F, $10, $28, $44, $00,   // k
    $00, $00, $41, $7F, $40, $00,   // l
    $00, $7C, $04, $18, $04, $78,   // m
    $00, $7C, $08, $04, $04, $78,   // n
    $00, $38, $44, $44, $44, $38,   // o

    $00, $FC, $24, $24, $24, $18,   // p
    $00, $18, $24, $24, $18, $FC,   // q
    $00, $7C, $08, $04, $04, $08,   // r
    $00, $48, $54, $54, $54, $20,   // s
    $00, $04, $3F, $44, $40, $20,   // t
    $00, $3C, $40, $40, $20, $7C,   // u
    $00, $1C, $20, $40, $20, $1C,   // v
    $00, $3C, $40, $30, $40, $3C,   // w
    $00, $44, $28, $10, $28, $44,   // x
    $00, $1C, $A0, $A0, $A0, $7C,   // y
    $00, $44, $64, $54, $4C, $44,   // z
    $00, $00, $10, $7C, $82, $00,   // {
    $00, $00, $00, $FF, $00, $00,   // |
    $00, $00, $82, $7C, $10, $00,   // }
    $00, $00, $06, $09, $09, $06    // ~ (Degrees)
    );

  MediumNumbers: array [0..315] of byte = (
    $0c, $10, $2d, $0d,
    $00, $00, $00, $80, $80, $80, $80, $80, $80, $00, $00, $00,
    $00, $00, $01, $03, $03, $03, $03, $03, $03, $01, $00, $00,   // -
    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,
    $00, $00, $00, $00, $00, $c0, $c0, $00, $00, $00, $00, $00,   // .
    $00, $00, $02, $86, $86, $86, $86, $86, $86, $02, $00, $00, $00, $00, $81, $c3, $c3, $c3, $c3, $c3, $c3, $81, $00, $00,   // /
    $00, $fc, $7a, $06, $06, $06, $06, $06, $06, $7a, $fc, $00,
    $00, $7e, $bc, $c0, $c0, $c0, $c0, $c0, $c0, $bc, $7e, $00,   // 0
    $00, $00, $00, $00, $00, $00, $00, $00, $00, $78, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3c, $7e, $00,   // 1
    $00, $00, $02, $86, $86, $86, $86, $86, $86, $7a, $fc, $00, $00, $7e, $bd, $c3, $c3, $c3, $c3, $c3, $c3, $81, $00, $00,   // 2
    $00, $00, $02, $86, $86, $86, $86, $86, $86, $7a, $fc, $00, $00, $00, $81, $c3, $c3, $c3, $c3, $c3, $c3, $bd, $7e, $00,   // 3
    $00, $fc, $78, $80, $80, $80, $80, $80, $80, $78, $fc, $00, $00, $00, $01, $03, $03, $03, $03, $03, $03, $3d, $7e, $00,   // 4
    $00, $fc, $7a, $86, $86, $86, $86, $86, $86, $02, $00, $00, $00, $00, $81, $c3, $c3, $c3, $c3, $c3, $c3, $bd, $7e, $00,   // 5
    $00, $fc, $7a, $86, $86, $86, $86, $86, $86, $02, $00, $00, $00, $7e, $bd, $c3, $c3, $c3, $c3, $c3, $c3, $bd, $7e, $00,   // 6
    $00, $00, $02, $06, $06, $06, $06, $06, $06, $7a, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3c, $7e, $00,   // 7
    $00, $fc, $7a, $86, $86, $86, $86, $86, $86, $7a, $fc, $00, $00, $7e, $bd, $c3, $c3, $c3, $c3, $c3, $c3, $bd, $7e, $00,   // 8
    $00, $fc, $7a, $86, $86, $86, $86, $86, $86, $7a, $fc, $00, $00, $00, $81, $c3, $c3, $c3, $c3, $c3, $c3, $bd, $7e, $00    // 9
    );

  BigNumbers: array [0..549] of byte = ($0e, $18, $2d, $0d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10, $38, $38, $38, $38, $38, $38, $38, $38, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,   // -
    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $40, $e0, $e0, $40, $00, $00, $00, $00, $00,   // .
    $00, $00, $02, $06, $0e, $0e, $0e, $0e, $0e, $0e, $06, $02, $00, $00, $00, $00, $10, $38, $38, $38, $38, $38, $38, $38, $38, $10, $00, $00, $00, $00, $80, $c0, $e0, $e0, $e0, $e0, $e0, $e0, $c0, $80, $00, $00,   // /
    $00, $fc, $fa, $f6, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $ef, $c7, $83, $00, $00, $00, $00, $00, $00, $83, $c7, $ef, $00, $00, $7f, $bf, $df, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00,   // 0
    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $f8, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $83, $c7, $ef, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $1f, $3f, $7f, $00,   // 1
    $00, $00, $02, $06, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $e0, $d0, $b8, $38, $38, $38, $38, $38, $38, $3b, $17, $0f, $00, $00, $7f, $bf, $df, $e0, $e0, $e0, $e0, $e0, $e0, $c0, $80, $00, $00,   // 2
    $00, $00, $02, $06, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $00, $10, $38, $38, $38, $38, $38, $38, $38, $bb, $d7, $ef, $00, $00, $00, $80, $c0, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00,   // 3
    $00, $fc, $f8, $f0, $00, $00, $00, $00, $00, $00, $f0, $f8, $fc, $00, $00, $0f, $17, $3b, $38, $38, $38, $38, $38, $38, $bb, $d7, $ef, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $1f, $3f, $7f, $00,   // 4
    $00, $fc, $fa, $f6, $0e, $0e, $0e, $0e, $0e, $0e, $06, $02, $00, $00, $00, $0f, $17, $3b, $38, $38, $38, $38, $38, $38, $b8, $d0, $e0, $00, $00, $00, $80, $c0, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00,   // 5
    $00, $fc, $fa, $f6, $0e, $0e, $0e, $0e, $0e, $0e, $06, $02, $00, $00, $00, $ef, $d7, $bb, $38, $38, $38, $38, $38, $38, $b8, $d0, $e0, $00, $00, $7f, $bf, $df, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00,   // 6
    $00, $00, $02, $06, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $83, $c7, $ef, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $1f, $3f, $7f, $00,   // 7
    $00, $fc, $fa, $f6, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $ef, $d7, $bb, $38, $38, $38, $38, $38, $38, $bb, $d7, $ef, $00, $00, $7f, $bf, $df, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00,   // 8
    $00, $fc, $fa, $f6, $0e, $0e, $0e, $0e, $0e, $0e, $f6, $fa, $fc, $00, $00, $0f, $17, $3b, $38, $38, $38, $38, $38, $38, $bb, $d7, $ef, $00, $00, $00, $80, $c0, $e0, $e0, $e0, $e0, $e0, $e0, $df, $bf, $7f, $00    // 9
    );

implementation

end.

